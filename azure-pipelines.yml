# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: windows-latest
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: '$(System.Defaultworkingdirectory)/start/pom.xml'
        goals: 'clean package'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/guide-cloud-azure-inventory.war
          # **/*.war
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@0
      inputs:
          artifactName: 'drop'
          targetPath: '$(Build.ArtifactStagingDirectory)'

- stage: deploy
  dependsOn: Build
  displayName: DeployontoAzure
  jobs:
    - deployment: DeployontoAzure
      displayName: DeployontoAzure
      environment: azure
      pool:
        vmImage: windows-latest
      strategy:
        runOnce:
          deploy:
            steps:
            - task: DownloadBuildArtifacts@0
              inputs:
                buildType: 'current'
                downloadType: 'single'
                artifactName: 'drop'
                downloadPath: '$(System.ArtifactsDirectory)'

            - task: AzureRmWebAppDeployment@4
              inputs:
                  ConnectionType: 'AzureRM'
                  azureSubscription: 'ServiceConnection-Automatic_51fecc24-1d42-418b-bab4-9b3bbf96f566'
                  appType: 'webApp'
                  WebAppName: 'javawebappdcs'
                  packageForLinux: '$(Build.ArtifactStagingDirectory)\start\inventory\target\guide-cloud-azure-inventory.war'


    # - task: Docker@2
    #   displayName: Build system
    #   inputs:
    #     containerRegistry: 'Docker_ACR'
    #     repository: 'jammanaraj/myfirstcontainerimage'
    #     command: 'buildAndPush'
    #     Dockerfile: '$(Build.SourcesDirectory)/start/system/Dockerfile'
    #     tags: 'system'
    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'Docker_ACR'
    #     repository: 'jammanaraj/myfirstcontainerimage'
    #     command: 'build'
    #     Dockerfile: '$(Build.SourcesDirectory)/start/inventory/Dockerfile'
    #     tags: inventory1

    # - task: Docker@2
    #   inputs:
    #     containerRegistry: 'Docker_ACR'
    #     repository: 'jammanaraj/myfirstcontainerimage'
    #     command: 'push'
    #     Dockerfile: '$(Build.SourcesDirectory)/start/inventory/Dockerfile'
    #     tags: inventory1

